name: Build Application

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

# 更新权限配置
permissions:
  contents: write
  discussions: write
  pull-requests: write
  issues: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ['3.8']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'  # 强制使用 x64 架构
        
    # 创建必要的文件和目录
    - name: Create necessary files
      shell: bash
      run: |
        # 创建 .env 文件
        if [ ! -f ".env" ]; then
          echo "Creating .env file..."
          echo "SILICON_API_KEY=dummy_key" > .env
        fi
        
        # 创建目录
        for dir in "assets" "temp" "logs"; do
          if [ ! -d "$dir" ]; then
            echo "Creating $dir directory..."
            mkdir -p "$dir"
          fi
        done
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    # macOS 特定配置
    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        brew install qt6
        # 强制使用 x86_64 架构重新安装 pygame
        ARCHFLAGS="-arch x86_64" pip install --force-reinstall pygame
        
        # 安装 PyQt6 依赖
        python -m pip install PyQt6-Qt6
        python -m pip install PyQt6-sip

    - name: Set macOS environment
      if: runner.os == 'macOS'
      run: |
        echo "QT_DEBUG_PLUGINS=1" >> $GITHUB_ENV
        
    # Windows 构建
    - name: Build (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        pyinstaller ^
        --noconsole ^
        --add-data ".env;." ^
        --add-data "assets/*;assets" ^
        --icon "assets/icon.ico" ^
        --name "Text2Voice" ^
        --hidden-import PyQt6.QtCore ^
        --hidden-import PyQt6.QtGui ^
        --hidden-import PyQt6.QtWidgets ^
        main.py

    # macOS 构建
    - name: Build (macOS)
      if: runner.os == 'macOS'
      run: |
        # Intel Mac 构建
        pyinstaller --noconsole \
          --add-data ".env:." \
          --add-data "assets/*:assets" \
          --icon "assets/icon.icns" \
          --name "Text2Voice-Intel" \
          --hidden-import PyQt6.QtCore \
          --hidden-import PyQt6.QtGui \
          --hidden-import PyQt6.QtWidgets \
          main.py

    # 创建 DMG (macOS)
    - name: Create DMG (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install create-dmg
        
        chmod +x "dist/Text2Voice-Intel.app/Contents/MacOS/Text2Voice-Intel"
        
        create-dmg \
          --volname "Text2Voice" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "Text2Voice-Intel.app" 200 190 \
          --hide-extension "Text2Voice-Intel.app" \
          --app-drop-link 600 185 \
          "Text2Voice-Intel.dmg" \
          "dist/"

    # 打包制品
    - name: Zip Artifacts
      shell: bash
      run: |
        cd dist
        if [ "${{ runner.os }}" == "Windows" ]; then
          7z a ../Text2Voice-windows-latest.zip ./*
        elif [ "${{ runner.os }}" == "macOS" ]; then
          zip -r ../Text2Voice-macos-intel-latest.zip ./*
        fi
        cd ..

    # 上传制品
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Text2Voice-${{ runner.os }}
        path: |
          Text2Voice-*.zip
          Text2Voice-*.dmg
        compression-level: 9
        retention-days: 90

    # 创建发布
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        files: |
          Text2Voice-windows-latest.zip
          Text2Voice-macos-intel-latest.zip
          Text2Voice-*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 